<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="106" passed="106" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-23T04:10:02Z" name="All Test Suite" finished-at="2023-03-23T04:10:05Z" duration-ms="2668">
    <groups>
    </groups>
    <test started-at="2023-03-23T04:10:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTest.java" finished-at="2023-03-23T04:10:02Z" duration-ms="71">
      <class name="hust.cs.javacourse.search.index.TermTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@3ecd23d9]" started-at="2023-03-23T04:10:02Z" name="testTestEquals" data-provider="testTerm" finished-at="2023-03-23T04:10:02Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@78e94dcf]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@3ecd23d9]" started-at="2023-03-23T04:10:02Z" name="testTestEquals" data-provider="testTerm" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@233fe9b6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@3ecd23d9]" started-at="2023-03-23T04:10:02Z" name="testTestToString" data-provider="testTerm" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@3ecd23d9]" started-at="2023-03-23T04:10:02Z" name="testGetContent" data-provider="testTerm" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@3ecd23d9]" started-at="2023-03-23T04:10:02Z" name="testCompareTo" data-provider="testTerm" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@38c5cc4c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@3ecd23d9]" started-at="2023-03-23T04:10:02Z" name="testCompareTo" data-provider="testTerm" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@37918c79]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@3ecd23d9]" started-at="2023-03-23T04:10:02Z" name="testSetContent" data-provider="testTerm" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@3ecd23d9]" started-at="2023-03-23T04:10:02Z" name="testWriteObject" data-provider="testTerm" finished-at="2023-03-23T04:10:02Z" duration-ms="21" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/E:/Experiment1Test(JDK-17-gxwown)/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@3ecd23d9]" started-at="2023-03-23T04:10:02Z" name="testReadObject" data-provider="testTerm" finished-at="2023-03-23T04:10:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/E:/Experiment1Test(JDK-17-gxwown)/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.TermTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTest.java -->
    <test started-at="2023-03-23T04:10:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTupleTest.java" finished-at="2023-03-23T04:10:02Z" duration-ms="14">
      <class name="hust.cs.javacourse.search.index.TermTupleTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@10dba097]" started-at="2023-03-23T04:10:02Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@1f3f4916]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@10dba097]" started-at="2023-03-23T04:10:02Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@794cb805]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@10dba097]" started-at="2023-03-23T04:10:02Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@4b5a5ed1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTermTuple, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@10dba097]" started-at="2023-03-23T04:10:02Z" name="testTestToString" data-provider="testTermTuple" finished-at="2023-03-23T04:10:02Z" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[<Search 1 100>]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@59d016c9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
      </class> <!-- hust.cs.javacourse.search.index.TermTupleTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTupleTest.java -->
    <test started-at="2023-03-23T04:10:02Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingTest.java" finished-at="2023-03-23T04:10:02Z" duration-ms="33">
      <class name="hust.cs.javacourse.search.index.PostingTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@646007f4]" started-at="2023-03-23T04:10:02Z" name="testTestEquals" data-provider="testPosting" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@769f71a9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@646007f4]" started-at="2023-03-23T04:10:02Z" name="testTestEquals" data-provider="testPosting" finished-at="2023-03-23T04:10:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@4c9f8c13]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@646007f4]" started-at="2023-03-23T04:10:02Z" name="testTestEquals" data-provider="testPosting" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@5ae50ce6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@646007f4]" started-at="2023-03-23T04:10:02Z" name="testTestEquals" data-provider="testPosting" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@6f96c77]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@646007f4]" started-at="2023-03-23T04:10:02Z" name="testTestEquals" data-provider="testPosting" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@be64738]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPosting, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@646007f4]" started-at="2023-03-23T04:10:02Z" name="testTestToString" data-provider="testPosting" finished-at="2023-03-23T04:10:02Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[10 100 320 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@3ba9ad43]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@646007f4]" started-at="2023-03-23T04:10:02Z" name="testSetDocId" data-provider="testPosting" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":20,"freq":0,"positions":[]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testGetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@646007f4]" started-at="2023-03-23T04:10:02Z" name="testGetFreq" data-provider="testPosting" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[10 100 320 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFreq -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@646007f4]" started-at="2023-03-23T04:10:02Z" name="testGetDocId" data-provider="testPosting" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[10 100 320 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testSetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@646007f4]" started-at="2023-03-23T04:10:02Z" name="testSetFreq" data-provider="testPosting" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":0,"freq":8,"positions":[]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetFreq -->
        <test-method signature="testGetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@646007f4]" started-at="2023-03-23T04:10:02Z" name="testGetPositions" data-provider="testPosting" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[10 100 320 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPositions -->
        <test-method signature="testSetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@646007f4]" started-at="2023-03-23T04:10:02Z" name="testSetPositions" data-provider="testPosting" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":0,"freq":0,"positions":[100 320 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetPositions -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@646007f4]" started-at="2023-03-23T04:10:02Z" name="testSort" data-provider="testPosting" finished-at="2023-03-23T04:10:02Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[10 100 320 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractPosting;, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@646007f4]" started-at="2023-03-23T04:10:02Z" name="testCompareTo" data-provider="testPosting" finished-at="2023-03-23T04:10:02Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@49b0b76]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@646007f4]" started-at="2023-03-23T04:10:02Z" name="testWriteObject" data-provider="testPosting" finished-at="2023-03-23T04:10:02Z" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[10 100 320 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/E:/Experiment1Test(JDK-17-gxwown)/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@646007f4]" started-at="2023-03-23T04:10:02Z" name="testReadObject" data-provider="testPosting" finished-at="2023-03-23T04:10:02Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[10 100 320 400]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/E:/Experiment1Test(JDK-17-gxwown)/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingTest.java -->
    <test started-at="2023-03-23T04:10:03Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingListTest.java" finished-at="2023-03-23T04:10:03Z" duration-ms="20">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method signature="testAdd(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5579bb86]" started-at="2023-03-23T04:10:03Z" name="testAdd" data-provider="testPostingList" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1 2 3 4]}->{"docId":2,"freq":2,"positions":[5 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@6a28ffa4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5579bb86]" started-at="2023-03-23T04:10:03Z" name="testTestToString" data-provider="testPostingList" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1 2 3 4]}->{"docId":2,"freq":2,"positions":[5 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5c30a9b0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testTestAdd(hust.cs.javacourse.search.index.AbstractPostingList, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5579bb86]" started-at="2023-03-23T04:10:03Z" name="testTestAdd" data-provider="testPostingList" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1 2 3 4]}->{"docId":2,"freq":2,"positions":[5 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[{"docId":1,"freq":4,"positions":[1 2 3 4]}, {"docId":1,"freq":4,"positions":[2 4 3 1]}, {"docId":2,"freq":2,"positions":[5 6]}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestAdd -->
        <test-method signature="testGet(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5579bb86]" started-at="2023-03-23T04:10:03Z" name="testGet" data-provider="testPostingList" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1 2 3 4]}->{"docId":2,"freq":2,"positions":[5 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@1700915]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method signature="testIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5579bb86]" started-at="2023-03-23T04:10:03Z" name="testIndexOf" data-provider="testPostingList" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1 2 3 4]}->{"docId":2,"freq":2,"positions":[5 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@21de60b4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method signature="testTestIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5579bb86]" started-at="2023-03-23T04:10:03Z" name="testTestIndexOf" data-provider="testPostingList" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1 2 3 4]}->{"docId":2,"freq":2,"positions":[5 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@31d7b7bf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestIndexOf -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5579bb86]" started-at="2023-03-23T04:10:03Z" name="testContains" data-provider="testPostingList" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1 2 3 4]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@48ae9b55]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5579bb86]" started-at="2023-03-23T04:10:03Z" name="testRemove" data-provider="testPostingList" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@c267ef4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method signature="testClear(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.Object)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5579bb86]" started-at="2023-03-23T04:10:03Z" name="testClear" data-provider="testPostingList" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5579bb86]" started-at="2023-03-23T04:10:03Z" name="testSize" data-provider="testPostingList" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5579bb86]" started-at="2023-03-23T04:10:03Z" name="testSize" data-provider="testPostingList" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1 2 3 4]}->{"docId":2,"freq":2,"positions":[5 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testTestRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5579bb86]" started-at="2023-03-23T04:10:03Z" name="testTestRemove" data-provider="testPostingList" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@635eaaf1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestRemove -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.Integer;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5579bb86]" started-at="2023-03-23T04:10:03Z" name="testSort" data-provider="testPostingList" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":2,"freq":4,"positions":[5 9 7 8]}->{"docId":3,"freq":2,"positions":[10 11]}->{"docId":4,"freq":4,"positions":[1 4 3 2]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Integer;@30ee2816]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5579bb86]" started-at="2023-03-23T04:10:03Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1 2 3 4]}->{"docId":2,"freq":2,"positions":[5 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5579bb86]" started-at="2023-03-23T04:10:03Z" name="testWriteObject" data-provider="testPostingList" finished-at="2023-03-23T04:10:03Z" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1 2 3 4]}->{"docId":2,"freq":2,"positions":[5 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/E:/Experiment1Test(JDK-17-gxwown)/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5579bb86]" started-at="2023-03-23T04:10:03Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5579bb86]" started-at="2023-03-23T04:10:03Z" name="testReadObject" data-provider="testPostingList" finished-at="2023-03-23T04:10:03Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{"docId":1,"freq":4,"positions":[1 2 3 4]}->{"docId":2,"freq":2,"positions":[5 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/E:/Experiment1Test(JDK-17-gxwown)/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingListTest.java -->
    <test started-at="2023-03-23T04:10:03Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentTest.java" finished-at="2023-03-23T04:10:03Z" duration-ms="16">
      <class name="hust.cs.javacourse.search.index.DocumentTest">
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@52525845]" started-at="2023-03-23T04:10:03Z" name="testGetDocId" data-provider="testDocument" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1
docPath:C:/1.txt
<aaa 1 17>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testSetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@52525845]" started-at="2023-03-23T04:10:03Z" name="testSetDocPath" data-provider="testDocument" finished-at="2023-03-23T04:10:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0
docPath:C:/2.txt

]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocPath -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@52525845]" started-at="2023-03-23T04:10:03Z" name="testSetDocId" data-provider="testDocument" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:2
docPath:null

]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@52525845]" started-at="2023-03-23T04:10:03Z" name="testGetDocPath" data-provider="testDocument" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1
docPath:C:/1.txt
<aaa 1 17>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetTuples(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@52525845]" started-at="2023-03-23T04:10:03Z" name="testGetTuples" data-provider="testDocument" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1
docPath:C:/1.txt
<aaa 1 17>,<bbb 1 30>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa 1 17>, <bbb 1 30>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuples -->
        <test-method signature="testAddTuple(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@52525845]" started-at="2023-03-23T04:10:03Z" name="testAddTuple" data-provider="testDocument" finished-at="2023-03-23T04:10:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1
docPath:C:/1.txt
<aaa 1 17>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[<aaa 1 17>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddTuple -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@52525845]" started-at="2023-03-23T04:10:03Z" name="testContains" data-provider="testDocument" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1
docPath:C:/1.txt
<aaa 1 17>,<bbb 1 30>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[<aaa 1 17>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@52525845]" started-at="2023-03-23T04:10:03Z" name="testContains" data-provider="testDocument" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1
docPath:C:/1.txt
<aaa 1 17>,<bbb 1 30>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[<bbb 1 30>]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testGetTuple(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@52525845]" started-at="2023-03-23T04:10:03Z" name="testGetTuple" data-provider="testDocument" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1
docPath:C:/1.txt
<aaa 1 17>,<bbb 1 30>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa 1 17>, <bbb 1 30>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuple -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@52525845]" started-at="2023-03-23T04:10:03Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1
docPath:C:/1.txt

]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@52525845]" started-at="2023-03-23T04:10:03Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1
docPath:C:/1.txt
<aaa 1 17>,<bbb 1 30>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractDocument, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@52525845]" started-at="2023-03-23T04:10:03Z" name="testTestToString" data-provider="testDocument" finished-at="2023-03-23T04:10:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1
docPath:C:/1.txt
<aaa 1 17>,<bbb 1 30>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@4facf68f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentTest.java -->
    <test started-at="2023-03-23T04:10:03Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java" finished-at="2023-03-23T04:10:03Z" duration-ms="14">
      <class name="hust.cs.javacourse.search.parse.TermTupleScannerTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@4ae82894]" started-at="2023-03-23T04:10:03Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2023-03-23T04:10:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@31c88ec8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa 1 0>, <bbb 1 1>, <ccc 1 2>, <ddd 1 3>, <is 1 4>, <f17 1 5>, <2020 1 6>, <ab 1 7>, <ababababababababababab 1 8>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@4ae82894]" started-at="2023-03-23T04:10:03Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2023-03-23T04:10:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@1cbbffcd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<activity 1 0>, <destination 1 1>, <emergency 1 2>, <26% 1 3>, <u571 1 4>, <because 1 5>, <hence 1 6>, <capital 1 7>, <i 1 8>, <frozen 1 9>, <benefits 1 10>, <google 1 11>, <hahahahahahahahahahahahah 1 12>, <ha 1 13>, <frozen 1 14>, <google 1 15>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.TermTupleScannerTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java -->
    <test started-at="2023-03-23T04:10:03Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java" finished-at="2023-03-23T04:10:03Z" duration-ms="14">
      <class name="hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@768b970c]" started-at="2023-03-23T04:10:03Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2023-03-23T04:10:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@c33b74f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa 1 0>, <bbb 1 1>, <ccc 1 2>, <ddd 1 3>, <f17 1 4>, <2020 1 5>, <ab 1 6>, <ababababababababababab 1 7>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@768b970c]" started-at="2023-03-23T04:10:03Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@130161f7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa 1 0>, <bbb 1 1>, <ccc 1 3>, <ddd 1 4>, <f17 1 6>, <2020 1 7>, <ab 1 8>, <ababababababababababab 1 10>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@768b970c]" started-at="2023-03-23T04:10:03Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2023-03-23T04:10:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@2c767a52]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<activity 1 0>, <destination 1 1>, <emergency 1 2>, <26% 1 3>, <u571 1 4>, <capital 1 7>, <frozen 1 9>, <benefits 1 10>, <google 1 11>, <hahahahahahahahahahahahah 1 12>, <ha 1 13>, <frozen 1 14>, <google 1 15>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java -->
    <test started-at="2023-03-23T04:10:03Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java" finished-at="2023-03-23T04:10:03Z" duration-ms="8">
      <class name="hust.cs.javacourse.search.parse.PatternTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@2f8f5f62]" started-at="2023-03-23T04:10:03Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@243c4f91]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa 1 0>, <bbb 1 2>, <ab 1 3>, <ccc 1 4>, <ddd 1 5>, <ababababababababababab 1 7>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@2f8f5f62]" started-at="2023-03-23T04:10:03Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2023-03-23T04:10:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@291ae]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<activity 1 0>, <destination 1 1>, <emergency 1 2>, <because 1 5>, <hence 1 6>, <capital 1 7>, <i 1 8>, <frozen 1 9>, <benefits 1 10>, <google 1 11>, <hahahahahahahahahahahahah 1 12>, <ha 1 13>, <frozen 1 14>, <google 1 15>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.PatternTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java -->
    <test started-at="2023-03-23T04:10:03Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java" finished-at="2023-03-23T04:10:03Z" duration-ms="3">
      <class name="hust.cs.javacourse.search.parse.LengthTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@382db087]" started-at="2023-03-23T04:10:03Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2023-03-23T04:10:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@1ea9f6af]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa 1 0>, <bbb 1 1>, <ccc 1 3>, <ddd 1 4>, <f17 1 5>, <2020 1 6>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@382db087]" started-at="2023-03-23T04:10:03Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2023-03-23T04:10:03Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@6a192cfe]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<activity 1 0>, <destination 1 1>, <emergency 1 2>, <26% 1 3>, <u571 1 4>, <because 1 5>, <hence 1 6>, <capital 1 7>, <frozen 1 9>, <benefits 1 10>, <google 1 11>, <frozen 1 14>, <google 1 15>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.LengthTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java -->
    <test started-at="2023-03-23T04:10:03Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java" finished-at="2023-03-23T04:10:03Z" duration-ms="5">
      <class name="hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@6366ebe0]" started-at="2023-03-23T04:10:03Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2023-03-23T04:10:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@7714e963]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<aaa 1 1>, <bbb 1 2>, <ccc 1 4>, <ddd 1 6>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@6366ebe0]" started-at="2023-03-23T04:10:03Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2023-03-23T04:10:03Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@20ce78ec]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[<activity 1 0>, <destination 1 1>, <emergency 1 2>, <capital 1 7>, <frozen 1 9>, <benefits 1 10>, <google 1 11>, <frozen 1 14>, <google 1 15>]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java -->
    <test started-at="2023-03-23T04:10:03Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentBuilderTest.java" finished-at="2023-03-23T04:10:04Z" duration-ms="1064">
      <class name="hust.cs.javacourse.search.index.DocumentBuilderTest">
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@1e4a7dd4]" started-at="2023-03-23T04:10:04Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2023-03-23T04:10:04Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0
docPath:/E:/Experiment1Test(JDK-17-gxwown)/test/config/..//text/2.txt
<activity 1 0>,<destination 1 1>,<emergency 1 2>,<26% 1 3>,<u571 1 4>,<because 1 5>,<hence 1 6>,<capital 1 7>,<i 1 8>,<frozen 1 9>,<benefits 1 10>,
<google 1 11>,<hahahahahahahahahahahahah 1 12>,<ha 1 13>,<frozen 1 14>,<google 1 15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0
docPath:D:\IdeaWorkspace\SeachEngine/text/2.txt
<activity 1 0>,<destination 1 1>,<emergency 1 2>,<26% 1 3>,<u571 1 4>,<because 1 5>,<hence 1 6>,<capital 1 7>,<i 1 8>,<frozen 1 9>,<benefits 1 10>,
<google 1 11>,<hahahahahahahahahahahahah 1 12>,<ha 1 13>,<frozen 1 14>,<google 1 15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@1e4a7dd4]" started-at="2023-03-23T04:10:04Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2023-03-23T04:10:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0
docPath:/E:/Experiment1Test(JDK-17-gxwown)/test/config/..//text/2.txt
<activity 1 0>,<destination 1 1>,<emergency 1 2>,<26% 1 3>,<u571 1 4>,<capital 1 7>,<frozen 1 9>,<benefits 1 10>,<google 1 11>,<hahahahahahahahahahahahah 1 12>,<ha 1 13>,
<frozen 1 14>,<google 1 15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0
docPath:D:\IdeaWorkspace\SeachEngine/text/2.txt
<activity 1 0>,<destination 1 1>,<emergency 1 2>,<26% 1 3>,<u571 1 4>,<capital 1 7>,<frozen 1 9>,<benefits 1 10>,<google 1 11>,<hahahahahahahahahahahahah 1 12>,<ha 1 13>,
<frozen 1 14>,<google 1 15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@1e4a7dd4]" started-at="2023-03-23T04:10:04Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2023-03-23T04:10:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0
docPath:/E:/Experiment1Test(JDK-17-gxwown)/test/config/..//text/2.txt
<activity 1 0>,<destination 1 1>,<emergency 1 2>,<26% 1 3>,<u571 1 4>,<because 1 5>,<hence 1 6>,<capital 1 7>,<frozen 1 9>,<benefits 1 10>,<google 1 11>,
<frozen 1 14>,<google 1 15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0
docPath:D:\IdeaWorkspace\SeachEngine/text/2.txt
<activity 1 0>,<destination 1 1>,<emergency 1 2>,<26% 1 3>,<u571 1 4>,<because 1 5>,<hence 1 6>,<capital 1 7>,<frozen 1 9>,<benefits 1 10>,<google 1 11>,
<frozen 1 14>,<google 1 15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@1e4a7dd4]" started-at="2023-03-23T04:10:04Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2023-03-23T04:10:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0
docPath:/E:/Experiment1Test(JDK-17-gxwown)/test/config/..//text/2.txt
<activity 1 0>,<destination 1 1>,<emergency 1 2>,<because 1 5>,<hence 1 6>,<capital 1 7>,<i 1 8>,<frozen 1 9>,<benefits 1 10>,<google 1 11>,<hahahahahahahahahahahahah 1 12>,
<ha 1 13>,<frozen 1 14>,<google 1 15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0
docPath:D:\IdeaWorkspace\SeachEngine/text/2.txt
<activity 1 0>,<destination 1 1>,<emergency 1 2>,<because 1 5>,<hence 1 6>,<capital 1 7>,<i 1 8>,<frozen 1 9>,<benefits 1 10>,<google 1 11>,<hahahahahahahahahahahahah 1 12>,
<ha 1 13>,<frozen 1 14>,<google 1 15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@1e4a7dd4]" started-at="2023-03-23T04:10:04Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2023-03-23T04:10:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0
docPath:/E:/Experiment1Test(JDK-17-gxwown)/test/config/..//text/2.txt
<activity 1 0>,<destination 1 1>,<emergency 1 2>,<capital 1 7>,<frozen 1 9>,<benefits 1 10>,<google 1 11>,<frozen 1 14>,<google 1 15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0
docPath:D:\IdeaWorkspace\SeachEngine/text/2.txt
<activity 1 0>,<destination 1 1>,<emergency 1 2>,<capital 1 7>,<frozen 1 9>,<benefits 1 10>,<google 1 11>,<frozen 1 14>,<google 1 15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@1e4a7dd4]" started-at="2023-03-23T04:10:04Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2023-03-23T04:10:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0
docPath:/E:/Experiment1Test(JDK-17-gxwown)/test/config/..//text/2.txt
<activity 1 0>,<destination 1 1>,<emergency 1 2>,<capital 1 7>,<frozen 1 9>,<benefits 1 10>,<google 1 11>,<frozen 1 14>,<google 1 15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0
docPath:D:\IdeaWorkspace\SeachEngine/text/2.txt
<activity 1 0>,<destination 1 1>,<emergency 1 2>,<capital 1 7>,<frozen 1 9>,<benefits 1 10>,<google 1 11>,<frozen 1 14>,<google 1 15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@1e4a7dd4]" started-at="2023-03-23T04:10:04Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2023-03-23T04:10:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0
docPath:/E:/Experiment1Test(JDK-17-gxwown)/test/config/..//text/2.txt
<activity 1 0>,<destination 1 1>,<emergency 1 2>,<capital 1 7>,<frozen 1 9>,<benefits 1 10>,<google 1 11>,<frozen 1 14>,<google 1 15>
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:0
docPath:D:\IdeaWorkspace\SeachEngine/text/2.txt
<activity 1 0>,<destination 1 1>,<emergency 1 2>,<capital 1 7>,<frozen 1 9>,<benefits 1 10>,<google 1 11>,<frozen 1 14>,<google 1 15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentBuilderTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentBuilderTest.java -->
    <test started-at="2023-03-23T04:10:04Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexTest.java" finished-at="2023-03-23T04:10:04Z" duration-ms="705">
      <class name="hust.cs.javacourse.search.index.IndexTest">
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6c9f5c0d]" started-at="2023-03-23T04:10:04Z" name="testTestToString" data-provider="testIndex" finished-at="2023-03-23T04:10:04Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
dodId-----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity   ---->   {"docId":0,"freq":3,"positions":[0 1 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits   ---->   {"docId":0,"freq":2,"positions":[2 7]}->{"docId":1,"freq":1,"positions":[10]}
capital   ---->   {"docId":0,"freq":2,"positions":[3 8]}->{"docId":1,"freq":1,"positions":[7]}
destination   ---->   {"docId":0,"freq":2,"positions":[4 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency   ---->   {"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy   ---->   {"docId":0,"freq":1,"positions":[5]}
frozen   ---->   {"docId":1,"freq":2,"positions":[9 14]}
google   ---->   {"docId":1,"freq":2,"positions":[11 15]}
marketplace   ---->   {"docId":2,"freq":1,"positions":[0]}
medical   ---->   {"docId":2,"freq":1,"positions":[1]}
notification   ---->   {"docId":2,"freq":1,"positions":[3]}
peninsula   ---->   {"docId":2,"freq":1,"positions":[5]}
pollution   ---->   {"docId":2,"freq":1,"positions":[7]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@59b38691]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testAddDocument([Lhust.cs.javacourse.search.index.AbstractIndex;, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6c9f5c0d]" started-at="2023-03-23T04:10:04Z" name="testAddDocument" data-provider="testIndex" finished-at="2023-03-23T04:10:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractIndex;@a22cb6a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docId:1
docPath:D:\IdeaWorkspace\SeachEngine/text/2.txt
<activity 1 0>,<destination 1 1>,<emergency 1 2>,<capital 1 7>,<frozen 1 9>,<benefits 1 10>,<google 1 11>,<frozen 1 14>,<google 1 15>
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDocument -->
        <test-method signature="testLoad(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6c9f5c0d]" started-at="2023-03-23T04:10:04Z" name="testLoad" data-provider="testIndex" finished-at="2023-03-23T04:10:04Z" duration-ms="16" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
dodId-----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity   ---->   {"docId":0,"freq":3,"positions":[0 1 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits   ---->   {"docId":0,"freq":2,"positions":[2 7]}->{"docId":1,"freq":1,"positions":[10]}
capital   ---->   {"docId":0,"freq":2,"positions":[3 8]}->{"docId":1,"freq":1,"positions":[7]}
destination   ---->   {"docId":0,"freq":2,"positions":[4 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency   ---->   {"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy   ---->   {"docId":0,"freq":1,"positions":[5]}
frozen   ---->   {"docId":1,"freq":2,"positions":[9 14]}
google   ---->   {"docId":1,"freq":2,"positions":[11 15]}
marketplace   ---->   {"docId":2,"freq":1,"positions":[0]}
medical   ---->   {"docId":2,"freq":1,"positions":[1]}
notification   ---->   {"docId":2,"freq":1,"positions":[3]}
peninsula   ---->   {"docId":2,"freq":1,"positions":[5]}
pollution   ---->   {"docId":2,"freq":1,"positions":[7]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/E:/Experiment1Test(JDK-17-gxwown)/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoad -->
        <test-method signature="testSave(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6c9f5c0d]" started-at="2023-03-23T04:10:04Z" name="testSave" data-provider="testIndex" finished-at="2023-03-23T04:10:04Z" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
dodId-----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity   ---->   {"docId":0,"freq":3,"positions":[0 1 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits   ---->   {"docId":0,"freq":2,"positions":[2 7]}->{"docId":1,"freq":1,"positions":[10]}
capital   ---->   {"docId":0,"freq":2,"positions":[3 8]}->{"docId":1,"freq":1,"positions":[7]}
destination   ---->   {"docId":0,"freq":2,"positions":[4 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency   ---->   {"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy   ---->   {"docId":0,"freq":1,"positions":[5]}
frozen   ---->   {"docId":1,"freq":2,"positions":[9 14]}
google   ---->   {"docId":1,"freq":2,"positions":[11 15]}
marketplace   ---->   {"docId":2,"freq":1,"positions":[0]}
medical   ---->   {"docId":2,"freq":1,"positions":[1]}
notification   ---->   {"docId":2,"freq":1,"positions":[3]}
peninsula   ---->   {"docId":2,"freq":1,"positions":[5]}
pollution   ---->   {"docId":2,"freq":1,"positions":[7]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/E:/Experiment1Test(JDK-17-gxwown)/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSave -->
        <test-method signature="testSearch(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractPostingList)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6c9f5c0d]" started-at="2023-03-23T04:10:04Z" name="testSearch" data-provider="testIndex" finished-at="2023-03-23T04:10:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
dodId-----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity   ---->   {"docId":0,"freq":3,"positions":[0 1 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits   ---->   {"docId":0,"freq":2,"positions":[2 7]}->{"docId":1,"freq":1,"positions":[10]}
capital   ---->   {"docId":0,"freq":2,"positions":[3 8]}->{"docId":1,"freq":1,"positions":[7]}
destination   ---->   {"docId":0,"freq":2,"positions":[4 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency   ---->   {"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy   ---->   {"docId":0,"freq":1,"positions":[5]}
frozen   ---->   {"docId":1,"freq":2,"positions":[9 14]}
google   ---->   {"docId":1,"freq":2,"positions":[11 15]}
marketplace   ---->   {"docId":2,"freq":1,"positions":[0]}
medical   ---->   {"docId":2,"freq":1,"positions":[1]}
notification   ---->   {"docId":2,"freq":1,"positions":[3]}
peninsula   ---->   {"docId":2,"freq":1,"positions":[5]}
pollution   ---->   {"docId":2,"freq":1,"positions":[7]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{"docId":0,"freq":3,"positions":[0 1 6]}->{"docId":1,"freq":1,"positions":[0]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testGetDictionary(hust.cs.javacourse.search.index.AbstractIndex, java.util.Set)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6c9f5c0d]" started-at="2023-03-23T04:10:04Z" name="testGetDictionary" data-provider="testIndex" finished-at="2023-03-23T04:10:04Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
dodId-----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity   ---->   {"docId":0,"freq":3,"positions":[0 1 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits   ---->   {"docId":0,"freq":2,"positions":[2 7]}->{"docId":1,"freq":1,"positions":[10]}
capital   ---->   {"docId":0,"freq":2,"positions":[3 8]}->{"docId":1,"freq":1,"positions":[7]}
destination   ---->   {"docId":0,"freq":2,"positions":[4 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency   ---->   {"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy   ---->   {"docId":0,"freq":1,"positions":[5]}
frozen   ---->   {"docId":1,"freq":2,"positions":[9 14]}
google   ---->   {"docId":1,"freq":2,"positions":[11 15]}
marketplace   ---->   {"docId":2,"freq":1,"positions":[0]}
medical   ---->   {"docId":2,"freq":1,"positions":[1]}
notification   ---->   {"docId":2,"freq":1,"positions":[3]}
peninsula   ---->   {"docId":2,"freq":1,"positions":[5]}
pollution   ---->   {"docId":2,"freq":1,"positions":[7]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDictionary -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6c9f5c0d]" started-at="2023-03-23T04:10:04Z" name="testWriteObject" data-provider="testIndex" finished-at="2023-03-23T04:10:04Z" duration-ms="25" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
dodId-----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity   ---->   {"docId":0,"freq":3,"positions":[0 1 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits   ---->   {"docId":0,"freq":2,"positions":[2 7]}->{"docId":1,"freq":1,"positions":[10]}
capital   ---->   {"docId":0,"freq":2,"positions":[3 8]}->{"docId":1,"freq":1,"positions":[7]}
destination   ---->   {"docId":0,"freq":2,"positions":[4 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency   ---->   {"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy   ---->   {"docId":0,"freq":1,"positions":[5]}
frozen   ---->   {"docId":1,"freq":2,"positions":[9 14]}
google   ---->   {"docId":1,"freq":2,"positions":[11 15]}
marketplace   ---->   {"docId":2,"freq":1,"positions":[0]}
medical   ---->   {"docId":2,"freq":1,"positions":[1]}
notification   ---->   {"docId":2,"freq":1,"positions":[3]}
peninsula   ---->   {"docId":2,"freq":1,"positions":[5]}
pollution   ---->   {"docId":2,"freq":1,"positions":[7]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/E:/Experiment1Test(JDK-17-gxwown)/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6c9f5c0d]" started-at="2023-03-23T04:10:04Z" name="testReadObject" data-provider="testIndex" finished-at="2023-03-23T04:10:04Z" duration-ms="22" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
dodId-----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity   ---->   {"docId":0,"freq":3,"positions":[0 1 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits   ---->   {"docId":0,"freq":2,"positions":[2 7]}->{"docId":1,"freq":1,"positions":[10]}
capital   ---->   {"docId":0,"freq":2,"positions":[3 8]}->{"docId":1,"freq":1,"positions":[7]}
destination   ---->   {"docId":0,"freq":2,"positions":[4 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency   ---->   {"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy   ---->   {"docId":0,"freq":1,"positions":[5]}
frozen   ---->   {"docId":1,"freq":2,"positions":[9 14]}
google   ---->   {"docId":1,"freq":2,"positions":[11 15]}
marketplace   ---->   {"docId":2,"freq":1,"positions":[0]}
medical   ---->   {"docId":2,"freq":1,"positions":[1]}
notification   ---->   {"docId":2,"freq":1,"positions":[3]}
peninsula   ---->   {"docId":2,"freq":1,"positions":[5]}
pollution   ---->   {"docId":2,"freq":1,"positions":[7]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/E:/Experiment1Test(JDK-17-gxwown)/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
        <test-method signature="testOptimize(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6c9f5c0d]" started-at="2023-03-23T04:10:04Z" name="testOptimize" data-provider="testIndex" finished-at="2023-03-23T04:10:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
dodId-----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity   ---->   {"docId":0,"freq":3,"positions":[0 1 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits   ---->   {"docId":0,"freq":2,"positions":[2 7]}->{"docId":1,"freq":1,"positions":[10]}
capital   ---->   {"docId":0,"freq":2,"positions":[3 8]}->{"docId":1,"freq":1,"positions":[7]}
destination   ---->   {"docId":0,"freq":2,"positions":[4 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency   ---->   {"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy   ---->   {"docId":0,"freq":1,"positions":[5]}
frozen   ---->   {"docId":1,"freq":2,"positions":[9 14]}
google   ---->   {"docId":1,"freq":2,"positions":[11 15]}
marketplace   ---->   {"docId":2,"freq":1,"positions":[0]}
medical   ---->   {"docId":2,"freq":1,"positions":[1]}
notification   ---->   {"docId":2,"freq":1,"positions":[3]}
peninsula   ---->   {"docId":2,"freq":1,"positions":[5]}
pollution   ---->   {"docId":2,"freq":1,"positions":[7]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
dodId-----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity   ---->   {"docId":0,"freq":3,"positions":[0 1 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits   ---->   {"docId":0,"freq":2,"positions":[2 7]}->{"docId":1,"freq":1,"positions":[10]}
capital   ---->   {"docId":0,"freq":2,"positions":[3 8]}->{"docId":1,"freq":1,"positions":[7]}
destination   ---->   {"docId":0,"freq":2,"positions":[4 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency   ---->   {"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy   ---->   {"docId":0,"freq":1,"positions":[5]}
frozen   ---->   {"docId":1,"freq":2,"positions":[9 14]}
google   ---->   {"docId":1,"freq":2,"positions":[11 15]}
marketplace   ---->   {"docId":2,"freq":1,"positions":[0]}
medical   ---->   {"docId":2,"freq":1,"positions":[1]}
notification   ---->   {"docId":2,"freq":1,"positions":[3]}
peninsula   ---->   {"docId":2,"freq":1,"positions":[5]}
pollution   ---->   {"docId":2,"freq":1,"positions":[7]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptimize -->
        <test-method signature="testGetDocName(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6c9f5c0d]" started-at="2023-03-23T04:10:04Z" name="testGetDocName" data-provider="testIndex" finished-at="2023-03-23T04:10:04Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
dodId-----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity   ---->   {"docId":0,"freq":3,"positions":[0 1 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits   ---->   {"docId":0,"freq":2,"positions":[2 7]}->{"docId":1,"freq":1,"positions":[10]}
capital   ---->   {"docId":0,"freq":2,"positions":[3 8]}->{"docId":1,"freq":1,"positions":[7]}
destination   ---->   {"docId":0,"freq":2,"positions":[4 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency   ---->   {"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy   ---->   {"docId":0,"freq":1,"positions":[5]}
frozen   ---->   {"docId":1,"freq":2,"positions":[9 14]}
google   ---->   {"docId":1,"freq":2,"positions":[11 15]}
marketplace   ---->   {"docId":2,"freq":1,"positions":[0]}
medical   ---->   {"docId":2,"freq":1,"positions":[1]}
notification   ---->   {"docId":2,"freq":1,"positions":[3]}
peninsula   ---->   {"docId":2,"freq":1,"positions":[5]}
pollution   ---->   {"docId":2,"freq":1,"positions":[7]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@5dd1c9f2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocName -->
      </class> <!-- hust.cs.javacourse.search.index.IndexTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexTest.java -->
    <test started-at="2023-03-23T04:10:05Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexBuilderTest.java" finished-at="2023-03-23T04:10:05Z" duration-ms="48">
      <class name="hust.cs.javacourse.search.index.IndexBuilderTest">
        <test-method signature="testBuildIndex(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexBuilderTest@3bd94634]" started-at="2023-03-23T04:10:05Z" name="testBuildIndex" data-provider="testIndexBuilder" finished-at="2023-03-23T04:10:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
dodId-----docPath mapping:
0   ---->   E:\Experiment1Test(JDK-17-gxwown)\test\text\1.txt
1   ---->   E:\Experiment1Test(JDK-17-gxwown)\test\text\2.txt
2   ---->   E:\Experiment1Test(JDK-17-gxwown)\test\text\3.txt
PostingList:
activity   ---->   {"docId":0,"freq":3,"positions":[0 1 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits   ---->   {"docId":0,"freq":2,"positions":[2 7]}->{"docId":1,"freq":1,"positions":[10]}
capital   ---->   {"docId":0,"freq":2,"positions":[3 8]}->{"docId":1,"freq":1,"positions":[7]}
destination   ---->   {"docId":0,"freq":2,"positions":[4 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency   ---->   {"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy   ---->   {"docId":0,"freq":1,"positions":[5]}
frozen   ---->   {"docId":1,"freq":2,"positions":[9 14]}
google   ---->   {"docId":1,"freq":2,"positions":[11 15]}
marketplace   ---->   {"docId":2,"freq":1,"positions":[0]}
medical   ---->   {"docId":2,"freq":1,"positions":[1]}
notification   ---->   {"docId":2,"freq":1,"positions":[3]}
peninsula   ---->   {"docId":2,"freq":1,"positions":[5]}
pollution   ---->   {"docId":2,"freq":1,"positions":[7]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dictionary:activity benefits capital destination emergency fizzy frozen google marketplace medical notification peninsula pollution 
dodId-----docPath mapping:
0   ---->   D:\IdeaWorkspace\SeachEngine\text\1.txt
1   ---->   D:\IdeaWorkspace\SeachEngine\text\2.txt
2   ---->   D:\IdeaWorkspace\SeachEngine\text\3.txt
PostingList:
activity   ---->   {"docId":0,"freq":3,"positions":[0 1 6]}->{"docId":1,"freq":1,"positions":[0]}
benefits   ---->   {"docId":0,"freq":2,"positions":[2 7]}->{"docId":1,"freq":1,"positions":[10]}
capital   ---->   {"docId":0,"freq":2,"positions":[3 8]}->{"docId":1,"freq":1,"positions":[7]}
destination   ---->   {"docId":0,"freq":2,"positions":[4 9]}->{"docId":1,"freq":1,"positions":[1]}
emergency   ---->   {"docId":0,"freq":1,"positions":[10]}->{"docId":1,"freq":1,"positions":[2]}
fizzy   ---->   {"docId":0,"freq":1,"positions":[5]}
frozen   ---->   {"docId":1,"freq":2,"positions":[9 14]}
google   ---->   {"docId":1,"freq":2,"positions":[11 15]}
marketplace   ---->   {"docId":2,"freq":1,"positions":[0]}
medical   ---->   {"docId":2,"freq":1,"positions":[1]}
notification   ---->   {"docId":2,"freq":1,"positions":[3]}
peninsula   ---->   {"docId":2,"freq":1,"positions":[5]}
pollution   ---->   {"docId":2,"freq":1,"positions":[7]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildIndex -->
      </class> <!-- hust.cs.javacourse.search.index.IndexBuilderTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexBuilderTest.java -->
    <test started-at="2023-03-23T04:10:05Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/HitTest.java" finished-at="2023-03-23T04:10:05Z" duration-ms="156">
      <class name="hust.cs.javacourse.search.query.HitTest">
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@77a57272]" started-at="2023-03-23T04:10:05Z" name="testGetDocId" data-provider="testHit" finished-at="2023-03-23T04:10:05Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-------------------------------------
docId: 0
docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt
content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score: 3.0
TermPostingMapping: 
activity ----> {"docId":0,"freq":3,"positions":[0 1 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@77a57272]" started-at="2023-03-23T04:10:05Z" name="testGetDocId" data-provider="testHit" finished-at="2023-03-23T04:10:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-------------------------------------
docId: 1
docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt
content: activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
score: 1.0
TermPostingMapping: 
activity ----> {"docId":1,"freq":1,"positions":[0]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@77a57272]" started-at="2023-03-23T04:10:05Z" name="testGetDocPath" data-provider="testHit" finished-at="2023-03-23T04:10:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-------------------------------------
docId: 1
docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt
content: activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
score: 1.0
TermPostingMapping: 
activity ----> {"docId":1,"freq":1,"positions":[0]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@77a57272]" started-at="2023-03-23T04:10:05Z" name="testGetDocPath" data-provider="testHit" finished-at="2023-03-23T04:10:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-------------------------------------
docId: 0
docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt
content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score: 3.0
TermPostingMapping: 
activity ----> {"docId":0,"freq":3,"positions":[0 1 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@77a57272]" started-at="2023-03-23T04:10:05Z" name="testGetContent" data-provider="testHit" finished-at="2023-03-23T04:10:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-------------------------------------
docId: 0
docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt
content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score: 3.0
TermPostingMapping: 
activity ----> {"docId":0,"freq":3,"positions":[0 1 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@77a57272]" started-at="2023-03-23T04:10:05Z" name="testGetContent" data-provider="testHit" finished-at="2023-03-23T04:10:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-------------------------------------
docId: 1
docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt
content: activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
score: 1.0
TermPostingMapping: 
activity ----> {"docId":1,"freq":1,"positions":[0]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@77a57272]" started-at="2023-03-23T04:10:05Z" name="testSetContent" data-provider="testHit" finished-at="2023-03-23T04:10:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-------------------------------------
docId: 0
docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt
content: new content1
score: 3.0
TermPostingMapping: 
activity ----> {"docId":0,"freq":3,"positions":[0 1 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@77a57272]" started-at="2023-03-23T04:10:05Z" name="testSetContent" data-provider="testHit" finished-at="2023-03-23T04:10:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-------------------------------------
docId: 1
docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt
content: new content2
score: 1.0
TermPostingMapping: 
activity ----> {"docId":1,"freq":1,"positions":[0]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@77a57272]" started-at="2023-03-23T04:10:05Z" name="testGetScore" data-provider="testHit" finished-at="2023-03-23T04:10:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-------------------------------------
docId: 0
docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt
content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score: 3.0
TermPostingMapping: 
activity ----> {"docId":0,"freq":3,"positions":[0 1 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@77a57272]" started-at="2023-03-23T04:10:05Z" name="testGetScore" data-provider="testHit" finished-at="2023-03-23T04:10:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-------------------------------------
docId: 1
docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt
content: activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
score: 1.0
TermPostingMapping: 
activity ----> {"docId":1,"freq":1,"positions":[0]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@77a57272]" started-at="2023-03-23T04:10:05Z" name="testSetScore" data-provider="testHit" finished-at="2023-03-23T04:10:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-------------------------------------
docId: 0
docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt
content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score: 3.0
TermPostingMapping: 
activity ----> {"docId":0,"freq":3,"positions":[0 1 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@77a57272]" started-at="2023-03-23T04:10:05Z" name="testSetScore" data-provider="testHit" finished-at="2023-03-23T04:10:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-------------------------------------
docId: 1
docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt
content: activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
score: 1.0
TermPostingMapping: 
activity ----> {"docId":1,"freq":1,"positions":[0]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@77a57272]" started-at="2023-03-23T04:10:05Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2023-03-23T04:10:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-------------------------------------
docId: 1
docPath: D:\IdeaWorkspace\SeachEngine\text\2.txt
content: activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
score: 1.0
TermPostingMapping: 
activity ----> {"docId":1,"freq":1,"positions":[0]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@77a57272]" started-at="2023-03-23T04:10:05Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2023-03-23T04:10:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-------------------------------------
docId: 0
docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt
content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score: 3.0
TermPostingMapping: 
activity ----> {"docId":0,"freq":3,"positions":[0 1 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.query.AbstractHit, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@77a57272]" started-at="2023-03-23T04:10:05Z" name="testTestToString" data-provider="testHit" finished-at="2023-03-23T04:10:05Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-------------------------------------
docId: 0
docPath: D:\IdeaWorkspace\SeachEngine\text\1.txt
content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
score: 3.0
TermPostingMapping: 
activity ----> {"docId":0,"freq":3,"positions":[0 1 6]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@37c7595]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.query.AbstractHit;, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@77a57272]" started-at="2023-03-23T04:10:05Z" name="testCompareTo" data-provider="testHit" finished-at="2023-03-23T04:10:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@63a270c9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
      </class> <!-- hust.cs.javacourse.search.query.HitTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/HitTest.java -->
    <test started-at="2023-03-23T04:10:05Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/IndexSearcherTest.java" finished-at="2023-03-23T04:10:05Z" duration-ms="161">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5579bb86]" started-at="2023-03-23T04:10:02Z" name="beforeSuite" finished-at="2023-03-23T04:10:02Z" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
      <class name="hust.cs.javacourse.search.query.IndexSearcherTest">
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@76a4d6c]" started-at="2023-03-23T04:10:05Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2023-03-23T04:10:05Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.impl.Hit;@53142455]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@40dff0b7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@76a4d6c]" started-at="2023-03-23T04:10:05Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2023-03-23T04:10:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.impl.Hit;@2dd29a59]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@784c3487]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testTestSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@76a4d6c]" started-at="2023-03-23T04:10:05Z" name="testTestSearch" data-provider="testIndexSearcher" finished-at="2023-03-23T04:10:05Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.impl.Hit;@7966baa7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@60975100]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestSearch -->
      </class> <!-- hust.cs.javacourse.search.query.IndexSearcherTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/IndexSearcherTest.java -->
  </suite> <!-- All Test Suite -->
</testng-results>
